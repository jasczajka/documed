name: Deploy backend to AWS ECR and EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    working-directory: backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build the application
        run: ./gradlew build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          IMAGE_TAG: latest
        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY:$IMAGE_TAG .
          docker push $ECR_REGISTRY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            echo "Logging into ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            echo "Pulling the latest Docker image from ECR..."
            docker pull ${{ secrets.ECR_REGISTRY }}:latest

            echo "Stopping existing container if it exists..."
            docker stop documed-backend || true
            docker rm documed-backend || true

            echo "Starting the new container..."
            docker run -d --name documed-backend -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e SPRING_ALLOWED_ORIGINS=${{ secrets.SPRING_ALLOWED_ORIGINS }} \
              -e SPRING_MEDICINE_LIST_FILE_URL=${{ secrets.SPRING_MEDICINE_LIST_FILE_URL }} \
              ${{ secrets.ECR_REGISTRY }}:latest
            echo "Deployment completed successfully."
