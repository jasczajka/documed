/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
export type DayOfWeekEnum = (typeof DayOfWeekEnum)[keyof typeof DayOfWeekEnum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DayOfWeekEnum = {
  MONDAY: 'MONDAY',
  TUESDAY: 'TUESDAY',
  WEDNESDAY: 'WEDNESDAY',
  THURSDAY: 'THURSDAY',
  FRIDAY: 'FRIDAY',
  SATURDAY: 'SATURDAY',
  SUNDAY: 'SUNDAY',
} as const;

export interface UploadWorkTimeDTO {
  dayOfWeek: DayOfWeekEnum;
  startTime: string;
  endTime: string;
  facilityId: number;
}

export interface WorkTimeReturnDTO {
  id: number;
  userId: number;
  facilityId: number;
  dayOfWeek: DayOfWeekEnum;
  startTime: string;
  endTime: string;
}

export interface UpdateDescriptionDTO {
  /** @minLength 1 */
  description: string;
}

export interface UpdateAttachmentsDTO {
  attachmentIds: number[];
}

export interface AdditionalServiceWithDetails {
  id: number;
  description?: string;
  date: string;
  fulfillerId: number;
  fulfillerFullName: string;
  patientId: number;
  patientFullName: string;
  patientPesel: string;
  serviceId: number;
  serviceName: string;
  attachments: FileInfoDTO[];
}

export interface FileInfoDTO {
  id: number;
  downloadUrl: string;
  fileName: string;
  sizeBytes: number;
}

export interface ScheduleVisitDTO {
  patientInformation?: string;
  patientId: number;
  doctorId: number;
  firstTimeSlotId: number;
  serviceId: number;
  facilityId: number;
}

export type VisitWithDetailsStatus =
  (typeof VisitWithDetailsStatus)[keyof typeof VisitWithDetailsStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VisitWithDetailsStatus = {
  PLANNED: 'PLANNED',
  IN_PROGRESS: 'IN_PROGRESS',
  CLOSED: 'CLOSED',
  CANCELLED: 'CANCELLED',
} as const;

export interface VisitWithDetails {
  id: number;
  status: VisitWithDetailsStatus;
  interview?: string;
  diagnosis?: string;
  recommendations?: string;
  totalCost?: number;
  facilityId: number;
  serviceId: number;
  serviceName: string;
  patientInformation?: string;
  patientId: number;
  patientFullName: string;
  patientPesel: string;
  patientBirthDate: string;
  doctorId: number;
  doctorFullName: string;
  date?: string;
  startTime?: string;
  endTime?: string;
  feedbackRating?: number;
  feedbackMessage?: string;
}

export interface GiveFeedbackDTO {
  /**
   * @minimum 1
   * @maximum 5
   */
  rating: number;
  text?: string;
}

export interface Subscription {
  id: number;
  name: string;
  price: number;
}

export type CreateServiceDTOType = (typeof CreateServiceDTOType)[keyof typeof CreateServiceDTOType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreateServiceDTOType = {
  REGULAR_SERVICE: 'REGULAR_SERVICE',
  ADDITIONAL_SERVICE: 'ADDITIONAL_SERVICE',
} as const;

export interface CreateServiceDTO {
  name: string;
  price: number;
  type: CreateServiceDTOType;
  estimatedTime: number;
  /** @minItems 1 */
  specializationIds: number[];
}

export type ServiceType = (typeof ServiceType)[keyof typeof ServiceType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServiceType = {
  REGULAR_SERVICE: 'REGULAR_SERVICE',
  ADDITIONAL_SERVICE: 'ADDITIONAL_SERVICE',
} as const;

export interface Service {
  id: number;
  name: string;
  price: number;
  type: ServiceType;
  estimatedTime: number;
  /** @minItems 1 */
  specializationIds: number[];
}

export interface Specialization {
  id: number;
  name: string;
}

export type CreateReferralDTOType =
  (typeof CreateReferralDTOType)[keyof typeof CreateReferralDTOType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreateReferralDTOType = {
  '{description=Skierowanie_do_specjalisty,_code=TO_SPECIALIST}':
    '{description=Skierowanie do specjalisty, code=TO_SPECIALIST}',
  '{description=Skierowanie_do_szpitala,_code=TO_HOSPITAL}':
    '{description=Skierowanie do szpitala, code=TO_HOSPITAL}',
  '{description=Skierowanie_na_badania_diagnostyczne,_code=FOR_DIAGNOSTICS}':
    '{description=Skierowanie na badania diagnostyczne, code=FOR_DIAGNOSTICS}',
  '{description=Skierowanie_na_rehabilitacjƒô,_code=FOR_REHABILITATION}':
    '{description=Skierowanie na rehabilitacjƒô, code=FOR_REHABILITATION}',
  '{description=Skierowanie_do_sanatorium,_code=TO_SANATORIUM}':
    '{description=Skierowanie do sanatorium, code=TO_SANATORIUM}',
  '{description=Skierowanie_do_opieki_d≈Çugoterminowej,_code=FOR_LONG_TERM_CARE}':
    '{description=Skierowanie do opieki d≈Çugoterminowej, code=FOR_LONG_TERM_CARE}',
  '{description=Skierowanie_psychiatryczne_lub_uzale≈ºnienia,_code=FOR_PSYCHIATRIC_CARE}':
    '{description=Skierowanie psychiatryczne lub uzale≈ºnienia, code=FOR_PSYCHIATRIC_CARE}',
} as const;

export interface CreateReferralDTO {
  visitId: number;
  type: CreateReferralDTOType;
  /** @minLength 1 */
  diagnosis: string;
  expirationDate: string;
}

export type ReturnReferralDTOType =
  (typeof ReturnReferralDTOType)[keyof typeof ReturnReferralDTOType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ReturnReferralDTOType = {
  '{description=Skierowanie_do_specjalisty,_code=TO_SPECIALIST}':
    '{description=Skierowanie do specjalisty, code=TO_SPECIALIST}',
  '{description=Skierowanie_do_szpitala,_code=TO_HOSPITAL}':
    '{description=Skierowanie do szpitala, code=TO_HOSPITAL}',
  '{description=Skierowanie_na_badania_diagnostyczne,_code=FOR_DIAGNOSTICS}':
    '{description=Skierowanie na badania diagnostyczne, code=FOR_DIAGNOSTICS}',
  '{description=Skierowanie_na_rehabilitacjƒô,_code=FOR_REHABILITATION}':
    '{description=Skierowanie na rehabilitacjƒô, code=FOR_REHABILITATION}',
  '{description=Skierowanie_do_sanatorium,_code=TO_SANATORIUM}':
    '{description=Skierowanie do sanatorium, code=TO_SANATORIUM}',
  '{description=Skierowanie_do_opieki_d≈Çugoterminowej,_code=FOR_LONG_TERM_CARE}':
    '{description=Skierowanie do opieki d≈Çugoterminowej, code=FOR_LONG_TERM_CARE}',
  '{description=Skierowanie_psychiatryczne_lub_uzale≈ºnienia,_code=FOR_PSYCHIATRIC_CARE}':
    '{description=Skierowanie psychiatryczne lub uzale≈ºnienia, code=FOR_PSYCHIATRIC_CARE}',
} as const;

export interface ReturnReferralDTO {
  id?: number;
  diagnosis?: string;
  type?: ReturnReferralDTOType;
  visitId?: number;
  expirationDate?: string;
}

export interface Medicine {
  id: string;
  name: string;
  commonName: string;
  dosage: string;
}

export interface CreatePrescriptionDTO {
  expirationDate: string;
}

export type PrescriptionStatus = (typeof PrescriptionStatus)[keyof typeof PrescriptionStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PrescriptionStatus = {
  NEW: 'NEW',
  ISSUED: 'ISSUED',
} as const;

export interface Prescription {
  id: number;
  accessCode: number;
  date: string;
  expirationDate: string;
  status: PrescriptionStatus;
}

export interface ResetPasswordConfirmDTO {
  /** @minLength 1 */
  email: string;
  /**
   * @minLength 6
   * @maxLength 6
   */
  otp: string;
}

export interface PatientRegisterRequestDTO {
  /** @minLength 1 */
  firstName: string;
  /** @minLength 1 */
  lastName: string;
  /** @pattern ^\d{11}$ */
  pesel?: string;
  /**
   * @minLength 1
   * @pattern ^\d{9}$
   */
  phoneNumber: string;
  /** @minLength 1 */
  email: string;
  /** @minLength 1 */
  address: string;
  /**
   * @minLength 6
   * @maxLength 2147483647
   */
  password: string;
  /** @minLength 1 */
  confirmPassword: string;
  birthdate: string;
}

export type PendingUserDTORole = (typeof PendingUserDTORole)[keyof typeof PendingUserDTORole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PendingUserDTORole = {
  PATIENT: 'PATIENT',
  DOCTOR: 'DOCTOR',
  NURSE: 'NURSE',
  WARD_CLERK: 'WARD_CLERK',
  ADMINISTRATOR: 'ADMINISTRATOR',
} as const;

export type PendingUserDTOAccountStatus =
  (typeof PendingUserDTOAccountStatus)[keyof typeof PendingUserDTOAccountStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PendingUserDTOAccountStatus = {
  ACTIVE: 'ACTIVE',
  PENDING_CONFIRMATION: 'PENDING_CONFIRMATION',
  DEACTIVATED: 'DEACTIVATED',
} as const;

export interface PendingUserDTO {
  id?: number;
  firstName?: string;
  lastName?: string;
  email?: string;
  pesel?: string;
  phoneNumber?: string;
  address?: string;
  birthDate?: string;
  role?: PendingUserDTORole;
  accountStatus?: PendingUserDTOAccountStatus;
}

export interface ResetPasswordRequestDTO {
  email: string;
}

export type StaffRegisterRequestDTORole =
  (typeof StaffRegisterRequestDTORole)[keyof typeof StaffRegisterRequestDTORole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const StaffRegisterRequestDTORole = {
  PATIENT: 'PATIENT',
  DOCTOR: 'DOCTOR',
  NURSE: 'NURSE',
  WARD_CLERK: 'WARD_CLERK',
  ADMINISTRATOR: 'ADMINISTRATOR',
} as const;

export interface StaffRegisterRequestDTO {
  role: StaffRegisterRequestDTORole;
  /** @minLength 1 */
  firstName: string;
  /** @minLength 1 */
  lastName: string;
  /** @minLength 1 */
  email: string;
  /**
   * @minLength 6
   * @maxLength 2147483647
   */
  password: string;
}

export type AuthResponseDTORole = (typeof AuthResponseDTORole)[keyof typeof AuthResponseDTORole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthResponseDTORole = {
  PATIENT: 'PATIENT',
  DOCTOR: 'DOCTOR',
  NURSE: 'NURSE',
  WARD_CLERK: 'WARD_CLERK',
  ADMINISTRATOR: 'ADMINISTRATOR',
} as const;

export interface AuthResponseDTO {
  token?: string;
  userId?: number;
  role?: AuthResponseDTORole;
}

export interface DoctorRegisterRequestDTO {
  /** @minLength 1 */
  firstName: string;
  /** @minLength 1 */
  lastName: string;
  /**
   * @minLength 1
   * @pattern ^\d{7}$
   */
  pwz: string;
  /**
   * @minLength 1
   * @pattern ^\d{9}$
   */
  phoneNumber: string;
  /** @minLength 1 */
  email: string;
  /**
   * @minLength 6
   * @maxLength 2147483647
   */
  password: string;
  /** @minItems 1 */
  specializationIds: number[];
}

export interface LoginRequestDTO {
  /** @minLength 1 */
  login: string;
  /** @minLength 1 */
  password: string;
  facilityId: number;
}

export interface ConfirmRegistrationRequestDTO {
  /** @minLength 1 */
  email: string;
  /**
   * @minLength 6
   * @maxLength 6
   */
  otp: string;
}

export interface ChangePasswordRequestDTO {
  /** @minLength 1 */
  oldPassword: string;
  /** @minLength 1 */
  newPassword: string;
}

export interface GenerateUploadUrlRequestDTO {
  sizeBytes: number;
  fileName: string;
  visitId?: number;
  additionalServiceId?: number;
}

export interface UploadUrlResponseDTO {
  uploadUrl: string;
  s3Key: string;
  attachmentId: number;
}

export interface CompleteUploadRequestDTO {
  attachmentId: number;
  s3Key: string;
}

export interface CreateAdditionalServiceDTO {
  /** @minLength 1 */
  description: string;
  date: string;
  fulfillerId: number;
  patientId: number;
  serviceId: number;
  attachmentIds?: number[];
}

export interface UpdateVisitDTO {
  interview?: string;
  diagnosis?: string;
  recommendations?: string;
}

export interface UpdateDoctorSpecializationsDTO {
  /** @minItems 1 */
  specializationIds: number[];
}

export interface TimeSlot {
  id?: number;
  visitId?: number;
  doctorId?: number;
  facilityId?: number;
  startTime?: string;
  endTime?: string;
  date?: string;
  busy?: boolean;
}

export interface AvailableTimeSlotDTO {
  id: number;
  doctorId: number;
  facilityId: number;
  startTime: string;
  busy?: boolean;
}

export interface SubscriptionToService {
  subscriptionId: number;
  serviceId: number;
  discount: number;
}

export interface MedicineWithAmount {
  id: string;
  name: string;
  commonName: string;
  dosage: string;
  amount: number;
}

export interface PatientDetailsDTO {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  pesel: string;
  birthdate: string;
  subscriptionId?: number;
}

export interface FacilityInfoReturnDTO {
  id: number;
  address: string;
  city: string;
}

export interface DoctorDetailsDTO {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  specializations: Specialization[];
}

export type MeDTORole = (typeof MeDTORole)[keyof typeof MeDTORole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MeDTORole = {
  PATIENT: 'PATIENT',
  DOCTOR: 'DOCTOR',
  NURSE: 'NURSE',
  WARD_CLERK: 'WARD_CLERK',
  ADMINISTRATOR: 'ADMINISTRATOR',
} as const;

export interface MeDTO {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  role: MeDTORole;
  facilityId: number;
}

export type CreateSubscriptionParams = {
  name: string;
  price: number;
};

export type AddMedicineToPrescriptionParams = {
  amount?: number;
};

export type GetAvailableFirstTimeSlotsByDoctorAndFacilityParams = {
  neededTimeSlots: number;
  facilityId: number;
};

export type CalculateVisitCostParams = {
  patientId: number;
  serviceId: number;
};

export type GetAllReferralTypes200Item =
  (typeof GetAllReferralTypes200Item)[keyof typeof GetAllReferralTypes200Item];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetAllReferralTypes200Item = {
  '{description=Skierowanie_do_specjalisty,_code=TO_SPECIALIST}':
    '{description=Skierowanie do specjalisty, code=TO_SPECIALIST}',
  '{description=Skierowanie_do_szpitala,_code=TO_HOSPITAL}':
    '{description=Skierowanie do szpitala, code=TO_HOSPITAL}',
  '{description=Skierowanie_na_badania_diagnostyczne,_code=FOR_DIAGNOSTICS}':
    '{description=Skierowanie na badania diagnostyczne, code=FOR_DIAGNOSTICS}',
  '{description=Skierowanie_na_rehabilitacjƒô,_code=FOR_REHABILITATION}':
    '{description=Skierowanie na rehabilitacjƒô, code=FOR_REHABILITATION}',
  '{description=Skierowanie_do_sanatorium,_code=TO_SANATORIUM}':
    '{description=Skierowanie do sanatorium, code=TO_SANATORIUM}',
  '{description=Skierowanie_do_opieki_d≈Çugoterminowej,_code=FOR_LONG_TERM_CARE}':
    '{description=Skierowanie do opieki d≈Çugoterminowej, code=FOR_LONG_TERM_CARE}',
  '{description=Skierowanie_psychiatryczne_lub_uzale≈ºnienia,_code=FOR_PSYCHIATRIC_CARE}':
    '{description=Skierowanie psychiatryczne lub uzale≈ºnienia, code=FOR_PSYCHIATRIC_CARE}',
} as const;

export type GetAllMedicinesParams = {
  /**
   * Maximum results to return
   */
  limit?: number;
};

export type SearchMedicinesParams = {
  /**
   * Search query
   */
  q: string;
  /**
   * Maximum results to return
   */
  limit?: number;
};
